---
import BaseLayout from "@layouts/BaseLayout.astro"
import Article from "@components/Article.astro"
import Dropdown from "@components/Dropdown.astro"
---

<BaseLayout title="RNN Language Model">
  <Article>
    <div style="display: flex; gap: 0.5rem; align-items: center;">
      <label for="selection" style="font-weight: bold;">Book:</label>
      <Dropdown id="selection" style="padding: 0.25rem 0.5rem;"></Dropdown>
      <button id="generate" disabled style="padding: 0.4rem 0.8rem;">Loading..</button>
    </div>

    <div id="output" style="margin-top: 1rem; font-family: ui-monospace, Menlo, monospace;"></div>

    <script>
      import { initialize_ort } from "@scripts/ort_handler"
      const selection = document.getElementById('selection');
      const button = document.getElementById('generate');
      const output = document.getElementById('output');

      const { ort, session } = await initialize_ort();
      const model_assets = await fetch('/bible-rnn/model_assets.json').then(r => r.json());
      const idx2token = [...model_assets.specials, ...model_assets.chars];
      const token2idx = {};
      for (let i = 0; i < idx2token.length; i++) {
        token2idx[idx2token[i]] = i;
      }
      button.disabled = false;
      button.textContent="Generate";

	  function init_hidden(){
		  const h = new ort.Tensor(
			  'float32',
			  new Float32Array(model_assets.lstm_layers * model_assets.hidden_dim),
			  [model_assets.lstm_layers, 1, model_assets.hidden_dim]);
		  const c = new ort.Tensor(
			  'float32',
			  new Float32Array(model_assets.lstm_layers * model_assets.hidden_dim),
			  [model_assets.lstm_layers, 1, model_assets.hidden_dim]);
		  return { h, c }
	  };

      function sample(prime) {
		const priming_indices = Array.from(prime).map(char => token2idx[char]);
		  const { h, c } = init_hidden();
		  console.log({prime});
		  console.log({priming_indices});
		  console.log({ h, c });
        console.log({idx2token});
        console.log({token2idx});
        console.log(session);
        console.log(ort);
        output.textContent = `Prime Chars: ${prime}`;
	  };
      button.addEventListener('click', () => {
        sample(selection.value);
      });
    </script>
  </Article>
</BaseLayout>
